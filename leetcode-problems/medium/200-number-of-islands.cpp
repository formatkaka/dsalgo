//
// Created by Siddhant on 2019-11-10.
//

#include "iostream"
#include "vector"
#include "string"
#include "queue"

using namespace std;

void discoverIsland(vector<vector<char>> &grid, int i, int j){

    queue<vector<int>> q;
    q.push({i,j});
    int k = 1;
    grid[i][j] = '0';
    while(!q.empty()){

        vector<int> v = q.front();
        q.pop();
        i = v[0];
        j = v[1];

        // up
        if(i > 0 && grid[i-1][j] == '1'){
            grid[i-1][j] = '0';
            q.push({i-1,j});
        }

        // down
        if(i < grid.size() - 1 && grid[i+1][j] == '1'){
            grid[i+1][j] = '0';
            q.push({i+1, j});
        }

        // left
        if(j > 0 && grid[i][j-1] == '1'){
            grid[i][j-1] = '0';
            q.push({i, j-1});
        }

        // right
        if(j < grid[i].size() -1 && grid[i][j+1] == '1'){
            grid[i][j+1] = '0';
            q.push({i, j+1});
        }

//        cout << "here\n" << k++ << " ij : " << i << " , " << j;

    }

//    cout << "done";

}

int numIslands(vector<vector<char>> &grid) {


    int totalIslands = 0;
    for (int i = 0; i < grid.size(); ++i) {

        for (int j = 0; j < grid[i].size(); ++j) {

            if(grid[i][j] == '1'){
                discoverIsland(grid, i, j);
                totalIslands++;
            }

        }

    }

    return totalIslands;

}

int main() {

//    vector<vector<char>> islands = {{'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}};
    vector<vector<char>> islands = {{'1','1','0','0','0'},{'1','1','0','0','0'},{'0','0','1','0','0'},{'0','0','0','1','1'}};
    cout << "num of islands : " << numIslands(islands);
    return 0;
}